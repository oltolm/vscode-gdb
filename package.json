{
  "name": "gdb-dap",
  "displayName": "GDB DAP",
  "version": "0.2.10",
  "publisher": "gnu-vs-code-extensions",
  "homepage": "https://sourceware.org/gdb/",
  "description": "GDB debugging from VSCode",
  "license": "Apache 2.0 License with LLVM exceptions",
  "repository": {
    "type": "git",
    "url": "https://github.com/oltolm/vscode-gdb.git"
  },
  "bugs": {
    "url": "https://github.com/oltolm/vscode-gdb/issues"
  },
  "keywords": [
    "C",
    "C++",
    "GDB"
  ],
  "engines": {
    "vscode": "^1.75.0"
  },
  "categories": [
    "Debuggers"
  ],
  "devDependencies": {
    "@types/node": "^18.19.41",
    "@types/vscode": "1.75.0",
    "@vscode/vsce": "^3.2.2",
    "prettier-plugin-curly": "^0.3.1",
    "prettier": "^3.4.2",
    "typescript": "^5.7.3"
  },
  "activationEvents": [
    "onDebug"
  ],
  "main": "./out/extension",
  "scripts": {
    "vscode:prepublish": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "format": "npx prettier './src-ts/' --write",
    "package": "vsce package --out ./out/gdb-dap.vsix",
    "publish": "vsce publish",
    "vscode-uninstall": "code --uninstall-extension gnu.gdb-dap",
    "vscode-install": "code --install-extension ./out/gdb-dap.vsix"
  },
  "contributes": {
    "languages": [
      {
        "id": "gdb.disassembly",
        "aliases": [
          "Disassembly"
        ],
        "extensions": [
          ".disasm"
        ]
      }
    ],
    "grammars": [
      {
        "language": "gdb.disassembly",
        "scopeName": "source.disassembly",
        "path": "./syntaxes/disassembly.json"
      }
    ],
    "configuration": {
      "type": "object",
      "title": "gdb-dap",
      "properties": {
        "gdb-dap.executable-path": {
          "scope": "resource",
          "type": "string",
          "description": "The path to the gdb binary."
        },
        "gdb-dap.log-path": {
          "scope": "resource",
          "type": "string",
          "description": "Enable DAP logging. Logs are written to filename. If no filename is given, logging is stopped."
        },
        "gdb-dap.log-level": {
          "scope": "resource",
          "type": "integer",
          "description": "Set the DAP logging level. The default is ‘1’, which logs the DAP protocol, whatever debug messages the developers thought were useful, and unexpected exceptions. Level ‘2’ can be used to log all exceptions, including ones that are considered to be expected. For example, a failure to parse an expression would be considered a normal exception and not normally be logged.",
          "default": 1
        },
        "gdb-dap.environment": {
          "scope": "resource",
          "type": "object",
          "default": {},
          "description": "The environment of the gdb process.",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "breakpoints": [
      {
        "language": "ada"
      },
      {
        "language": "arm"
      },
      {
        "language": "asm"
      },
      {
        "language": "c"
      },
      {
        "language": "cpp"
      },
      {
        "language": "crystal"
      },
      {
        "language": "d"
      },
      {
        "language": "fortan"
      },
      {
        "language": "fortran-modern"
      },
      {
        "language": "nim"
      },
      {
        "language": "objective-c"
      },
      {
        "language": "objectpascal"
      },
      {
        "language": "pascal"
      },
      {
        "language": "rust"
      },
      {
        "language": "swift"
      }
    ],
    "debuggers": [
      {
        "type": "gdb-dap",
        "label": "Native GDB Debugger",
        "program": "./bin/gdb",
        "args": [],
        "windows": {
          "program": "./bin/gdb.exe"
        },
        "configurationAttributes": {
          "launch": {
            "required": [
              "program"
            ],
            "properties": {
              "debugAdapterExecutable": {
                "type": "string",
                "markdownDescription": "The absolute path to the GDB debug adapter executable to use."
              },
              "args": {
                "type": [
                  "array"
                ],
                "description": "If provided, this should be an array of strings. These strings are provided as command-line arguments to the inferior, as if by set args. See Arguments.",
                "default": []
              },
              "cwd": {
                "type": "string",
                "description": "If provided, this should be a string. GDB will change its working directory to this directory, as if by the cd command (see Working Directory). The launched program will inherit this as its working directory. Note that change of directory happens before the program parameter is processed. This will affect the result if program is a relative filename.",
                "default": "${workspaceFolder}"
              },
              "env": {
                "type": "object",
                "description": "If provided, this should be an object. Each key of the object will be used as the name of an environment variable; each value must be a string and will be the value of that variable. The environment of the inferior will be set to exactly as passed in. See Environment.",
                "default": {}
              },
              "program": {
                "type": "string",
                "description": "If provided, this is a string that specifies the program to use. This corresponds to the file command. See Files."
              },
              "stopAtBeginningOfMainSubprogram": {
                "type": "boolean",
                "description": "If provided, this must be a boolean. When ‘True’, GDB will set a temporary breakpoint at the program’s main procedure, using the same approach as the start command. See Starting.",
                "default": false
              },
              "stopOnEntry": {
                "type": "boolean",
                "description": "If provided, this must be a boolean. When ‘True’, GDB will set a temporary breakpoint at the program’s first instruction, using the same approach as the starti command. See Starting.",
                "default": true
              }
            }
          },
          "attach": {
            "properties": {
              "debugAdapterExecutable": {
                "type": "string",
                "markdownDescription": "The absolute path to the GDB debug adapter executable to use."
              },
              "pid": {
                "type": [
                  "number",
                  "string"
                ],
                "description": "The process ID to which GDB should attach. See Attach."
              },
              "program": {
                "type": "string",
                "description": "If provided, this is a string that specifies the program to use. This corresponds to the file command. See Files. In some cases, GDB can automatically determine which program is running. However, for many remote targets, this is not the case, and so this should be supplied."
              },
              "target": {
                "type": "string",
                "description": "The target to which GDB should connect. This is a string and is passed to the target remote command. See Connecting."
              }
            }
          }
        },
        "initialConfigurations": [
          {
            "type": "gdb-dap",
            "request": "launch",
            "name": "Debug",
            "program": "${workspaceFolder}/<your program>",
            "args": [],
            "cwd": "${workspaceFolder}",
            "stopOnEntry": true
          }
        ],
        "configurationSnippets": [
          {
            "label": "GDB: Launch",
            "description": "",
            "body": {
              "type": "gdb-dap",
              "request": "launch",
              "name": "${2:Launch}",
              "program": "^\"\\${workspaceFolder}/${1:<your program>}\"",
              "args": [],
              "cwd": "^\"\\${workspaceFolder}\"",
              "stopOnEntry": true
            }
          },
          {
            "label": "GDB: Attach",
            "description": "",
            "body": {
              "type": "gdb-dap",
              "request": "attach",
              "name": "${2:Attach}",
              "program": "${1:<your program>}"
            }
          },
          {
            "label": "GDB: Load Coredump",
            "description": "",
            "body": {
              "type": "gdb-dap",
              "request": "attach",
              "name": "${2:Core}",
              "program": "${1:<your program>}",
              "coreFile": "${1:<your program>}.core"
            }
          }
        ]
      }
    ]
  }
}
